@page "/payment"
@using G5_MovieTicketBookingSystem.Services
@using G5_MovieTicketBookingSystem.Models.VNPAY
@inject IVnPayService VnPayService
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Components.NavigationManager UriHelper
@inject IUserService UserService
@inject IOrderService OrderService

@layout MainLayout

@code {
    private PaymentInformationModel paymentModel = new();
    private int? userId;
    private User? currentUser;
    private Order NewOrder { get; set; } = new()
        {
            OrderTimestamp = DateTime.UtcNow,
            OrderStatus = "Pending",
            TotalAmount = 0m,
            UserId = 1,
            User = new User()
            {
                Username = "GuestUser",
                Email = "guest@example.com",
                Password = "DefaultPass123!",
                Fullname = "Guest User"
            }
        };
    protected override async Task OnInitializedAsync()
    {
        // Lấy dữ liệu từ query parameters
        var uri = UriHelper.ToAbsoluteUri(UriHelper.Uri.ToString());
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

        // Cập nhật paymentModel từ query parameters
        paymentModel.OrderType = queryParams["orderType"];
        paymentModel.Amount = double.TryParse(queryParams["amount"], out double amount) ? amount : 0;
        paymentModel.OrderDescription = queryParams["orderDescription"];
        paymentModel.Name = queryParams["name"];

        userId = 1;
        currentUser = await UserService.GetUserByIdAsync(userId.Value);
        NewOrder.UserId = currentUser.UserId;
        NewOrder.User = currentUser;
        NewOrder.TotalAmount = (decimal)paymentModel.Amount;


        // Kiểm tra nếu dữ liệu đầy đủ
        if (!string.IsNullOrEmpty(paymentModel.OrderType) && paymentModel.Amount > 0)
        {
            var httpContext = HttpContextAccessor.HttpContext;
            if (httpContext != null)
            {
                var paymentUrl = VnPayService.CreatePaymentUrl(paymentModel, httpContext);
                if (!string.IsNullOrEmpty(paymentUrl))
                {
                    AddOrder();
                    // Chuyển hướng ngay lập tức tới URL thanh toán
                    Navigation.NavigateTo(paymentUrl, true);
                }
                else
                {
                    Console.WriteLine("❌ Lỗi: Không thể tạo URL thanh toán VNPAY.");
                }
            }
        }
        else
        {
            Console.WriteLine("❌ Lỗi: Dữ liệu thanh toán không hợp lệ.");
        }
    }

 
    private async Task AddOrder()
    {
        if (currentUser != null)
        {
            NewOrder.User = currentUser;
        }

        await OrderService.CreateOrderAsync(NewOrder);
    }
}
