// <auto-generated />
using System;
using G5_MovieTicketBookingSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace G5_MovieTicketBookingSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Cinema", b =>
                {
                    b.Property<int>("CinemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CinemaId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CinemaName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CinemaId");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MovieId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("OrderTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceCharged")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ScreenSeatId")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ScreenSeatId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Screen", b =>
                {
                    b.Property<int>("ScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenId"));

                    b.Property<int>("CinemaId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ScreenId");

                    b.HasIndex("CinemaId");

                    b.ToTable("Screens");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.ScreenSeat", b =>
                {
                    b.Property<int>("ScreenSeatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenSeatId"));

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<string>("SeatLabel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SeatTypeId")
                        .HasColumnType("int");

                    b.HasKey("ScreenSeatId");

                    b.HasIndex("ScreenId");

                    b.HasIndex("SeatTypeId");

                    b.ToTable("ScreenSeats");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.SeatLock", b =>
                {
                    b.Property<int>("SeatLockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatLockId"));

                    b.Property<DateTime>("LockExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LockStartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LockStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ScreenSeatId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("SeatLockId");

                    b.HasIndex("ScreenSeatId");

                    b.HasIndex("UserId");

                    b.ToTable("SeatLocks");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.SeatType", b =>
                {
                    b.Property<int>("SeatTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SeatTypeId"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SeatTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SeatTypeId");

                    b.ToTable("SeatTypes");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Showtime", b =>
                {
                    b.Property<int>("ShowtimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShowtimeId"));

                    b.Property<string>("ExperienceType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<int?>("ScreenSeatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShowDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("ShowTime")
                        .HasColumnType("time");

                    b.HasKey("ShowtimeId");

                    b.HasIndex("MovieId");

                    b.HasIndex("ScreenId");

                    b.ToTable("Showtimes");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<DateTime>("IssueTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ScannedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("TicketStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UniqueCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TicketId");

                    b.HasIndex("OrderItemId")
                        .IsUnique();

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.TicketScanLog", b =>
                {
                    b.Property<int>("ScanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScanId"));

                    b.Property<string>("ScanResult")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ScanTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("ScannedBy")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("ScanId");

                    b.HasIndex("ScannedBy");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketScanLogs");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.TransactionLog", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("GatewayResponse")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentGateway")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("TransactionTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("PaymentId");

                    b.HasIndex("OrderId");

                    b.ToTable("TransactionLogs");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Order", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.OrderItem", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.ScreenSeat", "ScreenSeat")
                        .WithMany("OrderItems")
                        .HasForeignKey("ScreenSeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ScreenSeat");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Screen", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Cinema", "Cinema")
                        .WithMany("Screens")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.ScreenSeat", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Screen", "Screen")
                        .WithMany("ScreenSeats")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.SeatType", "SeatType")
                        .WithMany("ScreenSeats")
                        .HasForeignKey("SeatTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Screen");

                    b.Navigation("SeatType");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.SeatLock", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.ScreenSeat", "ScreenSeat")
                        .WithMany("SeatLocks")
                        .HasForeignKey("ScreenSeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.User", "User")
                        .WithMany("SeatLocks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScreenSeat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Showtime", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Movie", "Movie")
                        .WithMany("Showtimes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.Screen", "Screen")
                        .WithMany("Showtimes")
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Screen");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Ticket", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.OrderItem", "OrderItem")
                        .WithOne("Ticket")
                        .HasForeignKey("G5_MovieTicketBookingSystem.Ticket", "OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderItem");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.TicketScanLog", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.User", "User")
                        .WithMany("TicketScanLogs")
                        .HasForeignKey("ScannedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.Ticket", "Ticket")
                        .WithMany("TicketScanLogs")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.TransactionLog", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Order", "Order")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.UserRole", b =>
                {
                    b.HasOne("G5_MovieTicketBookingSystem.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("G5_MovieTicketBookingSystem.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Cinema", b =>
                {
                    b.Navigation("Screens");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Movie", b =>
                {
                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Order", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.OrderItem", b =>
                {
                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Screen", b =>
                {
                    b.Navigation("ScreenSeats");

                    b.Navigation("Showtimes");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.ScreenSeat", b =>
                {
                    b.Navigation("OrderItems");

                    b.Navigation("SeatLocks");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.SeatType", b =>
                {
                    b.Navigation("ScreenSeats");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.Ticket", b =>
                {
                    b.Navigation("TicketScanLogs");
                });

            modelBuilder.Entity("G5_MovieTicketBookingSystem.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("SeatLocks");

                    b.Navigation("TicketScanLogs");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
